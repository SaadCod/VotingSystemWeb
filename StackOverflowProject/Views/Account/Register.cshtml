
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}



<div class="row">
    <div class="col-sm-12">
        <center><h1>Registration</h1></center>
        <form novalidate="novalidate" action="/account/register" method="post" class="needs-validation">
            @Html.AntiForgeryToken()
            <div class="form-row">
                <div class="form-group col-sm-12">
                    <label for="txtName">Name</label>
                    <input type="text" class="form-control" id="txtName" placeholder="Enter Name" name="Name" required="required" pattern="^[a-zA-Z ]*$" autofocus="autofocus" />
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please enter name [alphabets only].
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-6">
                    <label for="txtEmail">Email</label>
                    <input type="email" class="form-control" id="txtEmail" placeholder="something@gmail.com" name="Email" required="required" />
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Invalid email
                    </div>
                    <small class="email-exist text-danger"></small>
                </div>
            
            <div class="form-group col-sm-6">
                <label for="txtMobile">Mobile</label>
                <input type="text" class="form-control" id="txtMobile" placeholder="Enter Number" name="Mobile" required="required" pattern="^[03]\d{10}$" />
                <div class="valid-feedback">
                    Looks good!
                </div>
                <div class="invalid-feedback">
                    Invalid mobile Number.Must Be valid start from 03 And 11 Digit.
                </div>
            </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-6">
                    <label for="txtPassword">Password</label>
                    <input type="password" class="form-control" id="txtPassword" placeholder="Password" name="Password" required="required" minlength="6" oninput="form.ConfirmPassword.pattern = escapeRegExp(this.value)" />
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Password must contain at least 6 characters.
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    <label for="txtPassword">Confirm Password</label>
                    <input type="password" class="form-control" id="txtConfirmPassword" placeholder="Confirm Password" name="ConfirmPassword" required="required" />
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Password and Confirm Password do not match.
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-success">Register</button>
        </form>
</div>
</div>


<script>
    // Wait for the DOM to be fully loaded
    document.addEventListener("DOMContentLoaded", function () {
        var anchorElement = document.querySelector("a[href='/Account/Register']");
        if (anchorElement) {
            anchorElement.setAttribute("id", "active");
        }
    });

    $(document).on("submit", ".needs-validation", validate);
   
    function validate(event) {
        if ($(".needs-validation")[0].checkValidity() == false || $(".email-exist").text() != "") {
            event.preventDefault();
        }
        $(".needs-validation")[0].classList.add("was-validated");
    }

    function escapeRegExp(str) {
        return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }

    $("#txtEmail").blur(function () {
        $.ajax({
            url: "/api/account?email=" + $("#txtEmail").val(), type: "GET", success:
                function (response) {
                    if (response == "Not Found") {
                        $(".email-exist").text("");
                        $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "#28a745");
                    }
                    else {
                        $(".email-exist").text("Email already registered");
                        $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "white");
                    }
                },
            error: function () {
                $(".email-exist").text("Error");
            }
        });
    });





</script>




